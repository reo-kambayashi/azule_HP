---
const base = import.meta.env.BASE_URL;
---

<header class="site-header">
    <div class="container">
        <h1 class="logo">
            <a href={import.meta.env.BASE_URL}>
                <img src={`${import.meta.env.BASE_URL}images/logo.png`} alt="Azule Orchid" />
            </a>
        </h1>
        <button class="hamburger-menu" aria-label="メニューを開く" aria-expanded="false" aria-controls="main-nav-list">
            <span class="hamburger-bar"></span>
            <span class="hamburger-bar"></span>
            <span class="hamburger-bar"></span>
        </button>
        <nav class="main-nav">
            <ul class="nav-links" id="main-nav-list">
                <li><a href={import.meta.env.BASE_URL} class="nav-link">Home</a></li>
                <li><a href={`${import.meta.env.BASE_URL}about/`} class="nav-link">About Us</a></li>
                <li><a href={`${import.meta.env.BASE_URL}music/`} class="nav-link">Releases</a></li>
                <li><a href={`${import.meta.env.BASE_URL}tour/`} class="nav-link">Live</a></li>
                <li><a href={`${import.meta.env.BASE_URL}contact/`} class="nav-link">Contact / SNS</a></li>
            </ul>
        </nav>
    </div>
</header>

<style>
.site-header {
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    border-bottom: 3px solid var(--color-border);
    background-color: var(--header-bg);
    box-shadow: var(--box-shadow-card);
}

.site-header .container {
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: var(--spacing-md);
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.site-header .logo a {
    font-family: 'Roboto', sans-serif;
    font-size: clamp(1rem, 2vw, 2rem);
    font-weight: 700;
    text-decoration: none;
    color: var(--color-text);
}

.site-header .logo img {
    margin-top: var(--spacing-md);
    height: clamp(1.5rem, 5vw, 3rem);
    width: auto;
    display: block; /* 画像が予期せぬスペースを持たないように */
}

/* ハンバーガーメニューボタン */
.hamburger-menu {
    display: none; /* デフォルトでは非表示 */
    flex-direction: column;
    justify-content: space-around;
    width: 30px;
    height: 25px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1001; /* ナビゲーションより手前に */
}

.hamburger-bar {
    width: 100%;
    height: 3px;
    background-color: var(--header-txt);
    border-radius: 2px;
    transition: all 0.3s linear;
}

.hamburger-menu.is-active .hamburger-bar:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
}

.hamburger-menu.is-active .hamburger-bar:nth-child(2) {
    opacity: 0;
}

.hamburger-menu.is-active .hamburger-bar:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
}


.site-header .main-nav .nav-links {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid; /* デスクトップではグリッドレイアウト */
    grid-auto-flow: column;
    grid-auto-columns: max-content;
    gap: var(--spacing-md);
}

.site-header .main-nav .nav-links li .nav-link {
    display: inline-block;
    padding: var(--spacing-sm) var(--spacing-md);
    margin: 0 var(--spacing-xs);
    font-family: 'Open Sans', sans-serif;
    font-weight: 600;
    font-size: clamp(0.75rem, 1.5vw, 1rem); 
    color: var(--header-txt);
    background-color: transparent;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-base);
    transition: var(--transition-base);
}

.site-header .main-nav .nav-links li .nav-link:hover {
    color: var(--color-link-hover);
    transform: translateY(-2px);
    text-decoration: none;
}

@media (max-width: 768px) {
    .site-header .container {
        /* flex-direction: row; ロゴとハンバーガーを横並びにするため */
        /* align-items: center; */
        padding: var(--spacing-sm) var(--spacing-md);
    }

    .site-header .logo {
        margin-bottom: 0; /* モバイルではロゴ下のマージンを削除 */
    }
    
    .site-header .logo img {
        margin-top: 0; /* モバイルではロゴ上のマージンを削除 */
        height: clamp(1.2rem, 4vw, 2.5rem); /* モバイル用のロゴサイズ調整 */
    }

    .hamburger-menu {
        display: flex; /* 768px以下で表示 */
    }

    .site-header .main-nav {
        /* モバイルではナビゲーションを絶対配置または固定配置で表示 */
        position: absolute;
        top: 100%; /* ヘッダーのすぐ下に配置 */
        left: 0;
        width: 100%;
        background-color: var(--header-bg);
        box-shadow: var(--box-shadow-card);
        transform: translateY(-150%); /* 初期状態では画面外に隠す */
        transition: transform 0.3s ease-in-out;
        padding-bottom: var(--spacing-md);
    }

    .site-header .main-nav.is-active {
        transform: translateY(0); /* アクティブ時に表示 */
    }

    .site-header .main-nav .nav-links {
        display: flex;           
        flex-direction: column; /* モバイルでは縦並び */
        width: 100%;             
        align-items: center; /* 中央揃え */
        gap: var(--spacing-sm);
        padding-top: var(--spacing-md);
    }

    .site-header .main-nav .nav-links li {
        margin: 0;
        width: 90%; /* リンクの幅を調整 */
        text-align: center;
    }

    .site-header .main-nav .nav-links li .nav-link {
        display: block; /* リンクをブロック要素にして幅いっぱいにする */
        width: 100%;
        font-size: 1rem; /* モバイルでのフォントサイズ調整 */
        padding: var(--spacing-sm);
        margin: 0;
        border-radius: var(--radius-sm);
    }
}

@media (max-width: 480px) {
    /* 480px以下では特に変更なし、768pxのスタイルを継承 */
    .site-header .main-nav .nav-links li .nav-link {
        font-size: 0.9rem; /* さらに小さい画面用にフォントサイズ調整 */
    }
}

/* 370pxのメディアクエリは、上記の768pxのスタイルでカバーされるため、
   特定の調整が不要であれば削除またはコメントアウトも検討できます。
   もし残す場合は、ハンバーガーメニューのスタイルとの整合性を確認してください。 */
/*
@media (max-width: 370px) {
    .site-header .main-nav .nav-links {
        // grid-template-columns: 1fr; // ハンバーガーメニューでは不要
        // width: 90%;
    }
    
    .site-header .main-nav .nav-links li {
        // margin: calc(var(--spacing-xs) / 3) 0;
    }
    
    .site-header .main-nav .nav-links li .nav-link {
        // font-size: 0.65rem;
        // padding: calc(var(--spacing-xs) * 0.6);
    }
}
*/
</style>

<script>
    const hamburger = document.querySelector('.hamburger-menu');
    const mainNav = document.querySelector('.main-nav');

    if (hamburger && mainNav) {
        hamburger.addEventListener('click', () => {
            hamburger.classList.toggle('is-active');
            mainNav.classList.toggle('is-active');
            const isActive = mainNav.classList.contains('is-active');
            hamburger.setAttribute('aria-expanded', isActive.toString());
        });
    }
</script>
