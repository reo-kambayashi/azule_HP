---
export interface Props {
    role: string;
    memberName: string;
    description: string;
    imageSrc: string;
}
const { role, memberName, description, imageSrc } = Astro.props;
const imageFullPath = `${import.meta.env.BASE_URL}${imageSrc}`;
---

<article class="member-card fade-in-up">
    <div class="member-photo-container">
        <img src={imageFullPath} alt={memberName} class="member-photo" />
    </div>
    <div class="member-info">
        <h3 class="member-role">{role}</h3>
        <h4 class="member-name">{memberName}</h4>
    </div>
</article>

<style>
.member-card {
    display: flex;
    flex-direction: column; /* 常に縦に並ぶように設定 */
    align-items: center;
    gap: var(--spacing-sm);
    background: var(--color-white);
    border-radius: var(--radius-base);
    box-shadow: var(--box-shadow-card);
    padding: var(--spacing-md);
    width: 100%;
    aspect-ratio: 1 / 1; /* 正方形にする */
    box-sizing: border-box;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.member-photo-container {
    width: 70%; /* 写真のサイズをカードの70%に */
    aspect-ratio: 1 / 1; /* 写真も正方形に */
    overflow: hidden;
    border-radius: 50%;
    box-shadow: var(--box-shadow-card);
    flex-shrink: 0;
}

.member-photo {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.member-info {
    text-align: center;
    width: 100%;
}

.member-role {
    font-size: 1rem;
    color: var(--color-primary);
    margin-bottom: var(--spacing-xs);
}

.member-name {
    font-size: 1.2rem;
    margin-bottom: var(--spacing-sm);
}
</style>