---
import Layout from '../layouts/Layout.astro';
import MemberCard from '../components/MemberCard.astro';
import members from '../data/members.json';
import ComponentsStyles from '../styles/ComponentsStyles.astro';

// メンバーの型定義を追加
interface Member {
    role: string;
    memberName: string;
    description: string;
    imageSrc: string;
}

// 型付きメンバー配列として扱う
const typedMembers = members as Member[];

// SEO情報
const title = "About Us | Azule Orchid";
const metaDescription = "Azule Orchid（アズールオーキッド）のバンドメンバー紹介。仙台を拠点に活動するポストポップバンドの魅力とメンバープロフィール。";
---

<Layout 
    title={title}
    metaDescription={metaDescription}
    ogImage="images/top.JPG"
>
    <ComponentsStyles />
    <section class="about-page">
        <div class="about">
            <div class="about-header fade-in-left">
                <h1 class="concept">共鳴する"あなた"を絡み合う音に乗せて</h1>
                <p>
                    Now Editing...
                </p>
            </div>
            
            <div class="member-box">
                <h2>Member</h2>
                <div class="member-profile fade-in-left">
                    {typedMembers.map((member) => (
                        <MemberCard 
                            role={member.role} 
                            memberName={member.memberName} 
                            description={member.description} 
                            imageSrc={member.imageSrc} 
                        />
                    ))}
                </div>            
            </div>
        </div>
    </section>
</Layout>

<style>
.about-page {
    padding: var(--spacing-md) 0;
}

.about {
    max-width: var(--card-max-width);
    margin: 0 auto;
    padding: var(--spacing-md) var(--spacing-md);
}

.about-header {
    background: var(--color-white);
    border-radius: var(--radius-base);
    box-shadow: var(--box-shadow-card);
    padding: var(--spacing-md);
    margin-bottom: var(--spacing-xl);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-lg);
}

.member-box {
    /* background: var(--color-white); */
    /* border-radius: var(--radius-base); */
    /* box-shadow: var(--box-shadow-card); */
    /* padding: var(--spacing-lg); マージンを統一 */
    /* margin-bottom: var(--spacing-lg); 下部マージンを統一 */
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
    /* overflow: hidden; はみ出しを防止 */
}

.member-box h2 {
    margin-bottom: var(--spacing-lg);
    text-align: center;
}

.member-profile {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-lg); /* ギャップを統一 */
    width: 100%;
    box-sizing: border-box;
    padding: 0 var(--spacing-md); /* 内側の余白を少し小さく */
}

/* 中画面サイズでも同じギャップとマージンを適用 */
@media (max-width: 1024px) {
    .member-profile {
        grid-template-columns: repeat(2, 1fr); /* 2列グリッド (2x2) */
    }
}

@media (max-width: 768px) {
    .about {
        padding: var(--spacing-lg);
    }
    
    .about-header, 
    .member-box {
        padding: var(--spacing-lg);
        margin-bottom: var(--spacing-lg);
    }
}

/* 小画面サイズでも同じギャップとマージンを適用 */
@media (max-width: 576px) {
    .member-profile {
        grid-template-columns: repeat(2, minmax(120px, 1fr)); /* 2列を維持するが最小サイズを制限 */
        gap: var(--spacing-md); /* 間隔を小さく */
    }
}

/* 超小型画面 */
@media (max-width: 400px) {
    .member-profile {
        grid-template-columns: 1fr; /* 1列グリッド (1x4) */
        max-width: 100%; /* 中央に配置するため幅を制限 */
        margin: 0 auto;
    }
}

.concept {
    font-size: clamp(1.2rem, 3vw, 1.8rem); /* 元のサイズより小さく */
    font-weight: 300; /* フォントウェイトを軽く */
    color: var(--color-primary); /* 薄い色に */
    letter-spacing: 0.05em; /* 文字間隔を少し広く */
    line-height: 1.6;
    opacity: 0.85; /* 少し透明に */
    margin-bottom: var(--spacing-md);
    padding: var(--spacing-xs) var(--spacing-md);
    text-shadow: none; /* テキストシャドウを削除 */
    position: relative;
}

/* レスポンシブ対応 */
@media (max-width: 768px) {
    .concept {
        font-size: 1.1rem;
        padding: var(--spacing-xs);
    }
}

</style>