---
import Layout from '../layouts/Layout.astro';
import ComponentsStyles from '../styles/ComponentsStyles.astro';
import TourCard from '../components/TourCard.astro';
import tours from '../data/tour.json';

// SEO情報 (ビルド時)
const title = "Live | Azule Orchid";
const metaDescription = "Azule Orchidのライブ・イベント情報。予定されているライブと過去のライブ履歴をご紹介します。";
// フロントマターでのビルド時分類は、クライアントサイドで処理するため、ここでは必須ではなくなります。
---
<Layout
    title={title}
    metaDescription={metaDescription}
>
    <ComponentsStyles />
    <section class="tour-page">
        <h1 class="tour-page-title">Live</h1>
        
        <div class="tour-section">
            <h2 class="tour-section-title">Scheduled</h2>
            <div id="current-tours-list" class="tour-list fade-in-left">
                {/* Populated by client-side JavaScript */}
            </div>
            <p id="no-current-tours-message" class="tour-empty" style="display: none;">現在予定されているライブはありません。</p>
        </div>
        
        <div class="past-tour-section">
            <h2 class="tour-section-title">Past</h2>
            <div id="past-tours-list" class="tour-list fade-in-left">
                {/* Populated by client-side JavaScript */}
            </div>
            <p id="no-past-tours-message" class="tour-empty" style="display: none;">過去のライブ情報はありません。</p>
        </div>

        {/* Hidden container for all tour cards, rendered by Astro, manipulated by JS */}
        <div id="all-tours-pool" style="display: none;">
            {tours.map((tour: any) => (
                <div class="tour-item-wrapper" data-event-date={tour.date}>
                    <TourCard tour={tour} />
                </div>
            ))}
        </div>
    </section>
</Layout>

<style>
.tour {
    width: 90%;
}

.tour-header {
    padding: 1.5rem;
    margin-top: 1rem;
    margin-bottom: 0rem;
}

.tour-page {
    padding: var(--spacing-md) 0;
}

.tour-page-title {
    font-size: clamp(1.8rem, 4vw, 2.5rem);
    margin-bottom: var(--spacing-lg);
    text-align: center;
}

.tour-section-title {
    font-size: clamp(1.4rem, 4vw, 2rem);
    margin-top: var(--spacing-xl);
    margin-bottom: var(--spacing-md);
    text-align: center;
    color: var(--color-primary);
}

.tour-section, .past-tour-section {
    margin-bottom: var(--spacing-2xl);
}

.past-tour-section {
    margin-top: var(--spacing-2xl);
    padding-top: var(--spacing-lg);
    border-top: 1px solid var(--color-border);
}

.tour-empty {
    text-align: center;
    padding: var(--spacing-lg);
    color: var(--color-text-light);
    font-style: italic;
    background-color: var(--color-white);
    border-radius: var(--radius-base);
    box-shadow: var(--box-shadow-card);
    padding: var(--spacing-lg);
    width: var(--card-width);
    max-width: var(--card-max-width);
    margin: var(--spacing-xl) auto;
}

@media (max-width: 768px) {
    .tour-page {
        padding: var(--spacing-sm) 0;
    }
    
    .tour-page-title, .tour-section-title {
        margin-bottom: var(--spacing-md);
    }
    
    .tour-section, .past-tour-section {
        margin-bottom: var(--spacing-xl);
    }
    
    .past-tour-section {
        margin-top: var(--spacing-xl);
        padding-top: var(--spacing-md);
    }
}

.tour-item-wrapper {
    display: block; 
    /* 必要に応じてマージンなどを調整 */
    /* margin-bottom: var(--spacing-md); */
}

/* tour-listのfade-in-leftアニメーションが動的に追加された要素で期待通りに動作しない場合、
   個々のtour-item-wrapperにアニメーションを適用するか、
   要素追加後にJavaScriptでアニメーションをトリガーする必要があるかもしれません。 */
</style>