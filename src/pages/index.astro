---
import Layout from "../layouts/Layout.astro";
import ReleaseCard from "../components/ReleaseCard.astro";
// import ComponentsStyles from '../styles/ComponentsStyles.astro'; // 削除

import releases from "../data/releases.json";
import tourData from "../data/tour.json";
import TourCard from "../components/TourCard.astro";

interface TourItem {
  id: number;
  date: string;
  venue: string;
  city: string;
  title: string;
  flyer: string;
  ticketPrice?: string;
  reserve?: string;
}

// 現在の日付を取得
const today = new Date();
today.setHours(0, 0, 0, 0);

// 日付文字列をDateオブジェクトに変換する関数
function parseDate(dateStr: string): Date {
  const [year, month, day] = dateStr.split(".").map(Number);
  return new Date(year, month - 1, day);
}

// ツアーデータから今日以降のイベントを抽出して日付順にソート
const upcomingTours = tourData
  .filter((tour) => {
    const eventDate = parseDate(tour.date);
    return eventDate >= today;
  })
  .sort((a, b) => parseDate(a.date).getTime() - parseDate(b.date).getTime());

// 最も近い日付のイベントを取得（存在すれば）
const nextTour = upcomingTours.length > 0 ? upcomingTours[0] : null;

const latestRelease = releases[0];
const base = import.meta.env.BASE_URL;

// SEO情報
const title = "Azule Orchid (アズールオーキッド) | Official Site | Azule";
const metaDescription =
  "Azule Orchid（アズールオーキッド、azule orchid, あずーる）は仙台を拠点に活動するポストポップバンド Azule。公式サイトでは最新情報、リリース、ライブ情報を発信しています。";
---

<Layout
  title={title}
  metaDescription={metaDescription}
  ogImage="images/top.JPG"
  keywords="Azule, Azule Orchid, azule, azule orchid, あずーる, アズール, official site, バンド, 音楽, 仙台, ポストポップ, 最新情報, リリース, ライブ"
>
  <!-- <ComponentsStyles /> -->
  <!-- 削除 -->
  <section class="hero section fade-in-up">
    <!-- 一番目立たせたい連絡など -->
    <div class="banner">
      <span class="highlight">1st EP</span> 『<span class="italic"
        >Carte Vierge</span
      >』 <span class="highlight release">4/29 Release</span>
    </div>
    <img
      class="header-img"
      src={`${base}images/top.JPG`}
      alt="Azule Orchidのバンドメンバー"
      loading="lazy"
    />
  </section>

  <section class="latest-release section fade-in-left">
    <h2>Latest Release</h2>
    {
      latestRelease && (
        <div class="release-content">
          <ReleaseCard
            id={latestRelease.id}
            title={latestRelease.title}
            cover={latestRelease.cover}
            releaseDate={latestRelease.releaseDate}
            tracks={latestRelease.tracks}
            links={latestRelease.links}
          />
        </div>
      )
    }
  </section>

  <section class="next-live section fade-in-left">
    <h2>Next Live</h2>
    {
      nextTour ? (
        <div class="tour-list">
          <TourCard tour={nextTour} />
        </div>
      ) : (
        <p class="tour-empty">現在予定されているライブはありません。</p>
      )
    }
  </section>
</Layout>

<style>
  .hero {
    margin-top: 0;
    margin-bottom: var(--spacing-2xl);
    position: relative;
    overflow: hidden;
  }

  .hero h1 {
    font-size: clamp(2.5rem, 6vw, 4rem);
    margin-top: var(--spacing-lg);
    margin-bottom: var(--spacing-lg);
    text-align: center;
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-secondary),
      var(--color-accent)
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-weight: 800;
    letter-spacing: -0.02em;
    text-shadow: none;
  }

  .banner {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    color: var(--color-text);
    padding: var(--spacing-lg) var(--spacing-xl);
    border-radius: var(--radius-lg);
    text-align: center;
    margin: 0 auto var(--spacing-xl);
    box-shadow: var(--shadow-xl);
    font-size: clamp(1.2rem, 2.5vw, 1.5rem);
    font-weight: 600;
    border: 1px solid rgba(255, 255, 255, 0.3);
    letter-spacing: 0.02em;
    position: relative;
    z-index: 10;
    transition: var(--transition-base);
    width: 85%;
    max-width: 600px;
    overflow: hidden;
  }

  .banner:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: var(--shadow-xl), var(--shadow-glow);
  }

  .banner .highlight {
    background: linear-gradient(
      135deg,
      var(--color-secondary),
      var(--color-accent)
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-weight: 700;
    position: relative;
  }

  .banner .italic {
    font-style: italic;
    color: var(--color-accent);
    font-weight: 500;
  }

  .release {
    display: inline-block;
    position: relative;
  }

  .release::after {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(
      90deg,
      var(--color-secondary),
      var(--color-accent)
    );
    border-radius: 1px;
  }

  .hero .header-img {
    width: 85%;
    max-width: 1000px;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-xl);
    transition: var(--transition-base);
    position: relative;
    overflow: hidden;
  }

  .hero .header-img:hover {
    transform: scale(1.02);
    box-shadow: var(--shadow-xl), var(--shadow-glow);
  }

  /* セクションのスタイルを改善 */
  .latest-release,
  .next-live {
    margin-bottom: var(--spacing-2xl);
    position: relative;
  }

  .latest-release h2,
  .next-live h2 {
    font-size: clamp(2rem, 4vw, 3rem);
    margin-bottom: var(--spacing-xl);
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-secondary)
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-weight: 700;
    position: relative;
  }

  .latest-release h2::after,
  .next-live h2::after {
    content: "";
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(
      90deg,
      var(--color-secondary),
      var(--color-accent)
    );
    border-radius: 2px;
  }

  .release-content,
  .tour-list {
    position: relative;
    z-index: 2;
  }

  .tour-empty {
    text-align: center;
    font-size: 1.1rem;
    color: var(--color-text-light);
    font-style: italic;
    padding: var(--spacing-xl);
    background: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(10px);
    border-radius: var(--radius-lg);
    border: 1px solid rgba(255, 255, 255, 0.3);
    box-shadow: var(--shadow-md);
  }

  /* パーティクル効果的な装飾要素 */
  .hero::before {
    content: "";
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(
        circle at 20% 80%,
        rgba(59, 130, 246, 0.08) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 80% 20%,
        rgba(96, 165, 250, 0.06) 0%,
        transparent 50%
      );
    animation: float 20s ease-in-out infinite;
    pointer-events: none;
    z-index: 1;
  }

  @keyframes float {
    0%,
    100% {
      transform: translate(0, 0) rotate(0deg);
    }
    33% {
      transform: translate(30px, -30px) rotate(120deg);
    }
    66% {
      transform: translate(-20px, 20px) rotate(240deg);
    }
  }

  /* フェードインアニメーション */
  .fade-in-up {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease-out forwards;
  }

  .fade-in-left {
    opacity: 0;
    transform: translateX(-30px);
    animation: fadeInLeft 0.8s ease-out 0.2s forwards;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeInLeft {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* レスポンシブ対応 */
  @media (max-width: 768px) {
    .banner {
      width: 95%;
      padding: var(--spacing-md) var(--spacing-lg);
      font-size: clamp(1rem, 2.5vw, 1.2rem);
    }

    .hero .header-img {
      width: 95%;
    }

    .latest-release h2::after,
    .next-live h2::after {
      width: 40px;
      height: 2px;
    }
  }
</style>
